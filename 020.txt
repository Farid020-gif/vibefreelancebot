import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

TOKEN = os.getenv('TELEGRAM_TOKEN')

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ VibeFreelance –±–æ—Ç.\n"
        "–í–æ—Ç, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å:\n"
        "/services ‚Äî —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥\n"
        "/order ‚Äî –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—É\n"
        "/payment ‚Äî –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã"
    )

async def services(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üìã –ù–∞—à–∏ —É—Å–ª—É–≥–∏:\n"
        "1. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ CV\n"
        "2. –ù–∞–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤\n"
        "3. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π\n"
        "4. –ò–Ω—Ñ–æ–ø—Ä–æ–¥—É–∫—Ç—ã –Ω–∞ –∑–∞–∫–∞–∑"
    )

async def order(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üõí –ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑, –Ω–∞–ø–∏—à–∏ –Ω–∞–º –ø—Ä—è–º–æ —Å—é–¥–∞, —É–∫–∞–∑–∞–≤:\n"
        "- –£—Å–ª—É–≥—É\n"
        "- –Ø–∑—ã–∫ (AZ/RU/EN)\n"
        "- –°—Ä–æ–∫–∏ –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è\n\n"
        "üí¨ –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –∏ —É—Ç–æ—á–Ω–∏–º –¥–µ—Ç–∞–ª–∏."
    )

async def payment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üí≥ –û–ø–ª–∞—Ç–∞:\n"
        "Payeer ID: P1132834052\n\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ —Å—é–¥–∞ –∏–ª–∏ –Ω–∞ –Ω–∞—à Instagram/WhatsApp."
    )

async def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("services", services))
    app.add_handler(CommandHandler("order", order))
    app.add_handler(CommandHandler("payment", payment))

    await app.run_polling()

if name == '__main__':
    import asyncio
    asyncio.run(main())